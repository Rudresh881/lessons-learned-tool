{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  setIsSubmitting(true);\n  setError('');\n  try {\n    const data = new FormData();\n\n    // Append form fields\n    Object.entries(formData).forEach(([key, value]) => {\n      data.append(key, value);\n    });\n\n    // Append files\n    files.forEach(file => {\n      data.append('files', file);\n    });\n    const response = await axios.post('http://localhost:5000/api/issues', data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      timeout: 8000 // 8 second timeout\n    });\n    if (response.status === 201 || response.data.success) {\n      setFormData(initialFormState);\n      setFiles([]);\n      alert('Issue submitted successfully!');\n      navigate('/');\n    } else {\n      throw new Error(response.data.message || 'Submission failed');\n    }\n  } catch (err) {\n    let errorMessage = 'Failed to submit issue';\n    if (err.response) {\n      console.error('Server error:', err.response.data);\n      errorMessage = err.response.data.message || err.response.data.error || `Server error (${err.response.status})`;\n      if (err.response.data.missingFields) {\n        errorMessage += `\\nMissing fields: ${err.response.data.missingFields.join(', ')}`;\n      }\n    } else if (err.request) {\n      console.error('No response received:', err.request);\n      errorMessage = 'Server is not responding. Please check:\\n1. Backend is running\\n2. Network connection';\n    } else {\n      console.error('Error:', err.message);\n      errorMessage = err.message;\n    }\n    setError(errorMessage);\n  } finally {\n    setIsSubmitting(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setIsSubmitting","setError","data","FormData","Object","entries","formData","forEach","key","value","append","files","file","response","axios","post","headers","timeout","status","success","setFormData","initialFormState","setFiles","alert","navigate","Error","message","err","errorMessage","console","error","missingFields","join","request"],"sources":["/workspaces/lessons-learned-tool/client/src/pages/ReportIssueForm.js"],"sourcesContent":["const handleSubmit = async (e) => {\n  e.preventDefault();\n  setIsSubmitting(true);\n  setError('');\n\n  try {\n    const data = new FormData();\n\n    // Append form fields\n    Object.entries(formData).forEach(([key, value]) => {\n      data.append(key, value);\n    });\n\n    // Append files\n    files.forEach(file => {\n      data.append('files', file);\n    });\n\n    const response = await axios.post('http://localhost:5000/api/issues', data, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      timeout: 8000 // 8 second timeout\n    });\n\n    if (response.status === 201 || response.data.success) {\n      setFormData(initialFormState);\n      setFiles([]);\n      alert('Issue submitted successfully!');\n      navigate('/');\n    } else {\n      throw new Error(response.data.message || 'Submission failed');\n    }\n  } catch (err) {\n    let errorMessage = 'Failed to submit issue';\n\n    if (err.response) {\n      console.error('Server error:', err.response.data);\n      errorMessage = err.response.data.message ||\n        err.response.data.error ||\n        `Server error (${err.response.status})`;\n\n      if (err.response.data.missingFields) {\n        errorMessage += `\\nMissing fields: ${err.response.data.missingFields.join(', ')}`;\n      }\n    } else if (err.request) {\n      console.error('No response received:', err.request);\n      errorMessage = 'Server is not responding. Please check:\\n1. Backend is running\\n2. Network connection';\n    } else {\n      console.error('Error:', err.message);\n      errorMessage = err.message;\n    }\n\n    setError(errorMessage);\n  } finally {\n    setIsSubmitting(false);\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,eAAe,CAAC,IAAI,CAAC;EACrBC,QAAQ,CAAC,EAAE,CAAC;EAEZ,IAAI;IACF,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAE3B;IACAC,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;MACjDP,IAAI,CAACQ,MAAM,CAACF,GAAG,EAAEC,KAAK,CAAC;IACzB,CAAC,CAAC;;IAEF;IACAE,KAAK,CAACJ,OAAO,CAACK,IAAI,IAAI;MACpBV,IAAI,CAACQ,MAAM,CAAC,OAAO,EAAEE,IAAI,CAAC;IAC5B,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,kCAAkC,EAAEb,IAAI,EAAE;MAC1Ec,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,OAAO,EAAE,IAAI,CAAC;IAChB,CAAC,CAAC;IAEF,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAIL,QAAQ,CAACX,IAAI,CAACiB,OAAO,EAAE;MACpDC,WAAW,CAACC,gBAAgB,CAAC;MAC7BC,QAAQ,CAAC,EAAE,CAAC;MACZC,KAAK,CAAC,+BAA+B,CAAC;MACtCC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAACZ,QAAQ,CAACX,IAAI,CAACwB,OAAO,IAAI,mBAAmB,CAAC;IAC/D;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,IAAIC,YAAY,GAAG,wBAAwB;IAE3C,IAAID,GAAG,CAACd,QAAQ,EAAE;MAChBgB,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEH,GAAG,CAACd,QAAQ,CAACX,IAAI,CAAC;MACjD0B,YAAY,GAAGD,GAAG,CAACd,QAAQ,CAACX,IAAI,CAACwB,OAAO,IACtCC,GAAG,CAACd,QAAQ,CAACX,IAAI,CAAC4B,KAAK,IACvB,iBAAiBH,GAAG,CAACd,QAAQ,CAACK,MAAM,GAAG;MAEzC,IAAIS,GAAG,CAACd,QAAQ,CAACX,IAAI,CAAC6B,aAAa,EAAE;QACnCH,YAAY,IAAI,qBAAqBD,GAAG,CAACd,QAAQ,CAACX,IAAI,CAAC6B,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE;MACnF;IACF,CAAC,MAAM,IAAIL,GAAG,CAACM,OAAO,EAAE;MACtBJ,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEH,GAAG,CAACM,OAAO,CAAC;MACnDL,YAAY,GAAG,uFAAuF;IACxG,CAAC,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEH,GAAG,CAACD,OAAO,CAAC;MACpCE,YAAY,GAAGD,GAAG,CAACD,OAAO;IAC5B;IAEAzB,QAAQ,CAAC2B,YAAY,CAAC;EACxB,CAAC,SAAS;IACR5B,eAAe,CAAC,KAAK,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}