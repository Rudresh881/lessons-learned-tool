{"ast":null,"code":"// In the handleSubmit function, replace the try-catch block with:\nconst handleSubmit = async e => {\n  e.preventDefault();\n  setIsSubmitting(true);\n  setError('');\n  try {\n    const formDataToSend = new FormData();\n\n    // Append form fields\n    Object.entries(formData).forEach(([key, value]) => {\n      formDataToSend.append(key, value);\n    });\n\n    // Append files\n    files.forEach(file => {\n      formDataToSend.append('files', file);\n    });\n    const response = await axios.post('http://localhost:5000/api/issues', formDataToSend, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    if (response.status === 201) {\n      // Reset form on success\n      setFormData({\n        projectName: '',\n        ratedPower: '',\n        ratedSpeed: '',\n        application: '',\n        legislation: '',\n        fieSystem: '',\n        egtSystem: '',\n        issueTitle: '',\n        description: '',\n        issueType: 'Hardware'\n      });\n      setFiles([]);\n      // Show success message\n      setError(''); // Clear any previous errors\n      alert('Issue submitted successfully!');\n    }\n  } catch (err) {\n    console.error('Submission error:', err);\n    let errorMessage = 'Failed to submit issue';\n    if (err.response) {\n      // Server responded with error status\n      errorMessage = err.response.data.message || `Server error: ${err.response.status}`;\n    } else if (err.request) {\n      // Request was made but no response\n      errorMessage = 'No response from server. Is the backend running?';\n    }\n    setError(errorMessage);\n  } finally {\n    setIsSubmitting(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setIsSubmitting","setError","formDataToSend","FormData","Object","entries","formData","forEach","key","value","append","files","file","response","axios","post","headers","status","setFormData","projectName","ratedPower","ratedSpeed","application","legislation","fieSystem","egtSystem","issueTitle","description","issueType","setFiles","alert","err","console","error","errorMessage","data","message","request"],"sources":["/workspaces/lessons-learned-tool/client/src/pages/ReportIssueForm.js"],"sourcesContent":["// In the handleSubmit function, replace the try-catch block with:\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  setIsSubmitting(true);\n  setError('');\n\n  try {\n    const formDataToSend = new FormData();\n    \n    // Append form fields\n    Object.entries(formData).forEach(([key, value]) => {\n      formDataToSend.append(key, value);\n    });\n    \n    // Append files\n    files.forEach(file => {\n      formDataToSend.append('files', file);\n    });\n    \n    const response = await axios.post('http://localhost:5000/api/issues', formDataToSend, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    \n    if (response.status === 201) {\n      // Reset form on success\n      setFormData({\n        projectName: '',\n        ratedPower: '',\n        ratedSpeed: '',\n        application: '',\n        legislation: '',\n        fieSystem: '',\n        egtSystem: '',\n        issueTitle: '',\n        description: '',\n        issueType: 'Hardware',\n      });\n      setFiles([]);\n      // Show success message\n      setError(''); // Clear any previous errors\n      alert('Issue submitted successfully!');\n    }\n  } catch (err) {\n    console.error('Submission error:', err);\n    let errorMessage = 'Failed to submit issue';\n    \n    if (err.response) {\n      // Server responded with error status\n      errorMessage = err.response.data.message || \n                    `Server error: ${err.response.status}`;\n    } else if (err.request) {\n      // Request was made but no response\n      errorMessage = 'No response from server. Is the backend running?';\n    }\n    \n    setError(errorMessage);\n  } finally {\n    setIsSubmitting(false);\n  }\n};"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,eAAe,CAAC,IAAI,CAAC;EACrBC,QAAQ,CAAC,EAAE,CAAC;EAEZ,IAAI;IACF,MAAMC,cAAc,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAErC;IACAC,MAAM,CAACC,OAAO,CAACC,QAAQ,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;MACjDP,cAAc,CAACQ,MAAM,CAACF,GAAG,EAAEC,KAAK,CAAC;IACnC,CAAC,CAAC;;IAEF;IACAE,KAAK,CAACJ,OAAO,CAACK,IAAI,IAAI;MACpBV,cAAc,CAACQ,MAAM,CAAC,OAAO,EAAEE,IAAI,CAAC;IACtC,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,kCAAkC,EAAEb,cAAc,EAAE;MACpFc,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC3B;MACAC,WAAW,CAAC;QACVC,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE,EAAE;QACdC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE,EAAE;QACbC,SAAS,EAAE,EAAE;QACbC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC,CAAC;MACFC,QAAQ,CAAC,EAAE,CAAC;MACZ;MACA5B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACd6B,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;IACvC,IAAIG,YAAY,GAAG,wBAAwB;IAE3C,IAAIH,GAAG,CAAClB,QAAQ,EAAE;MAChB;MACAqB,YAAY,GAAGH,GAAG,CAAClB,QAAQ,CAACsB,IAAI,CAACC,OAAO,IAC1B,iBAAiBL,GAAG,CAAClB,QAAQ,CAACI,MAAM,EAAE;IACtD,CAAC,MAAM,IAAIc,GAAG,CAACM,OAAO,EAAE;MACtB;MACAH,YAAY,GAAG,kDAAkD;IACnE;IAEAjC,QAAQ,CAACiC,YAAY,CAAC;EACxB,CAAC,SAAS;IACRlC,eAAe,CAAC,KAAK,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}